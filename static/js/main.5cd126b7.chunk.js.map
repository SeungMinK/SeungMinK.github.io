{"version":3,"sources":["food1.JPG","food2.png","food3.png","dataMenu.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","price","styled","div","h1","Detail","p","useParams","history","useHistory","useState","Ui","UiChange","inputData","inputDataChange","Lodding_Ui_UiChange","useEffect","timmer","setTimeout","console","log","clearTimeout","className","menu","onChange","e","target","value","onClick","push","axios","get","then","dataResult","data","catch","MenuCard","props","src","foodImg","index","width","menu2","App","menuData","food1","food2","food3","Navbar","bg","variant","Container","Brand","href","Nav","Link","as","to","exact","path","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cd126b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/food1.0825db22.JPG\";","export default __webpack_public_path__ + \"static/media/food2.bfad56ae.png\";","export default __webpack_public_path__ + \"static/media/food3.facad5bf.png\";","export default[\n\n{\n    id :0,\n    title : \"봉골레 파스타\",\n    price : 15000\n},\n\n{   \n    id :1,\n    title : \"치킨 토마토 파스타\",\n    price : 13000\n\n},\n\n{\n    id:2,\n    title : \"쉬림프 알리오 올리오 파스타\",\n    price : 16000\n}\n\n\n]","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';//useHistroy를 훅이라고 부름\nimport styled from 'styled-components';\nimport './Detail.css'\nimport axios from 'axios';\n\nlet box = styled.div`\n    padding : 20px;\n    \n`;\nlet titleBox = styled.h1`\n  \n    color : red;\n\n`;\n\nfunction Detail(p) {//모듈화\n\n    let { id } = useParams();\n    let history = useHistory();//이동햇던 방문기록을 저장해놓는 object\n    let [Ui, UiChange] = useState(true);//UI Switch\n    let [inputData, inputDataChange] = useState('');\n    let [Lodding_Ui, Lodding_Ui_UiChange] = useState(true);//UI Switch\n\n\n    /*,[] 을 사용하면 useEffect()가 실행될 조건을 넣을 수 있음, \n   이렇게 코드 작성시,\n   1. 컴포넌트가 로드 될때 한번\n   2.Ui의 State가 변경될때만 실행됨\n       * []를  주지 않을시 아무 State가 변경될때마다 실행됨\n       * []안에 조건을 작성하지 않을시 페이지가 로드될때 1번만 실행되고 더 이상 실행되지 않음\n   \n   3. setTimeout() 함수 실행시, 지정된 시간보다 사용자가 먼저 페이지를 벗어날 경우 에러가 발생할 수 있음\n       -> useEffect() 안에 return 부분은, 컴포넌트를 벗어날 경우 실행되는 코드임\n       -> return에 clearTimeout()함수를 작성하여 페이지를 벗어날 경우 timmer도 종료시켜줘야함 \n   */\n    useEffect(() => {\n\n        let timmer = setTimeout(() => { UiChange(false) }, 2000);\n        console.log('useEffect실행');\n        return () => { clearTimeout(timmer) }//\n    }, [Ui]);\n\n\n\n    return (\n       \n        <div>\n            <div className='red'>Detail</div>\n\n            <div>\n                <h4>{0 <= id && id < 3 ? p.menu[id].title : \"없는 항목\"} </h4>\n                {Ui == true ? <h2>찾아오시는길 안내 입니다.</h2> : <h2>찾아오는 방법 안내 입니다.</h2>}\n                <span>5호선 강일역에 내리셔서 3번 출구로 100m 직진 후 2층 상가에 위치하고있습니다.</span>\n            </div>\n\n            {/*\n            여기서 onChnge()는 input 박스가 바뀔때 마다 실행하는 함수\n            e는 이벤트 객체\n            e.target.value => input에 현재 입력된 값\n            */}\n            <input onChange={(e) => { inputDataChange(e.target.value) }} />\n            {inputData}\n\n            <button onClick={() => {\n                //history.goBack();//goBack()함수와 같은 함수들의 사용법은 라이브러리 문서를 참고\n                history.push('/')//원하는 경로로 이동\n            }}>뒤로가기</button>\n\n            {/*\n            fetch()와 axios의 가장 큰 차이점은 axios()는 json으로 받은 데이터들을 Object로 알아서 바꿔줌 \n            */}\n            \n            <button onClick={() => {\n                \n              \n\n                //지금은 서버가 없어서, 코딩애플에서 만들어준 서버 사용\n                axios.get('https://codingapple1.github.io/shop/data2.json')\n                    .then((dataResult) => {\n                        console.log(dataResult.data[0].price);\n                        \n                        console.log('요청 성공');\n                        Lodding_Ui_UiChange(false);\n\n                    }) //성공햇을때\n                    .catch(() => {\n                        console.log('요청 실패');\n                        Lodding_Ui_UiChange(false);\n                    }); //실패했을때\n            }}>더보기</button>\n        </div>\n\n    )\n}\n\nfunction LoddingBar(props) {\n    return (\n  \n      <div className=\"col-md-4\">\n          <h1>Ajax 데이터 가져오는중</h1>\n      </div>\n    )\n}\n   \n\nexport default Detail;//Detail 함수를 외부에서 호출 할 수 있음","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport './App.css';\nimport food1 from './food1.JPG';\nimport food2 from './food2.png';\nimport food3 from './food3.png';\nimport { useState } from 'react';\nimport menuData from './dataMenu';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from './Detail';\n\n/*\n\n\n\n*/\n\n\nfunction App() {\n  /*\n  중요한 데이터들은 최상위 컴퍼넌트인 App에 저장해놓고 상위컴퍼넌트에서 하위컴퍼넌트로 props로 보내주는 방식으로 해야함\n  */\n\n  let [menu, menuChange] = useState(menuData);\n  let [foodImg, foodImgChange] = useState([food1, food2, food3]);\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">MinHouse</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n\n\n\n      <Route exact path=\"/\">\n\n\n        <div className=\"Jumbotron\">\n\n          <div className=\"title\"> <h1>Minhouse</h1> </div>\n          <div className=\"content\">이태리 양식을 전문으로 하는 가게입니다.</div>\n        </div>\n        <hr />\n        <div className=\"container\">\n\n          <h1>Menu</h1>\n          <div className=\"row\">\n\n\n            {\n              menu.map(function (data, index) {//map에서 두번째 파라미터는 반복횟수를 가르키는 변수가 됨\n                return (\n                  <MenuCard menu2={menu[index]} index={index} foodImg={foodImg}></MenuCard>\n                )\n              }\n              )\n            }\n          </div>\n\n\n\n        </div>\n\n      </Route>\n      \n      <Switch>\n      \n      <Route path=\"/detail/:id\">\n        <Detail menu={menu}/>\n      </Route>\n      <Route path=\"/:id\">\n            <div> 아무거나 적었을때 보여주는 페이지</div>\n      </Route>\n     \n      </Switch>     \n\n    </>\n  );\n\n}\n\n\nfunction MenuCard(props) {\n  return (\n\n    <div className=\"col-md-4\"><img src={props.foodImg[props.index]} width=\"100%\" />\n      <h4>{props.menu2.title} </h4>\n      <h4>{props.menu2.price}</h4>\n\n    </div>\n\n  )\n\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport{BrowserRouter} from 'react-router-dom';//라우터를 사용하기위해 라이브러리에서 import\n//BrowserRouter , hashRouter 두가지가있음\n//차이점은 경로에 '#'으로 표시되냐 안되냐의 차이\n//주소창에 바로 경로를 사용할 경우, 서버에게 잘못 요청 할 수있어서 #을 붙히면 서버에 전송되지않음 즉, hashRouter 가 더 안전함\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}